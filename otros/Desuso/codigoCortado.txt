---------------Estructura para iniciar base de datos----------------

CREATE SCHEMA `baggu` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci ;

CREATE TABLE `baggu`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `avatar` VARCHAR(50) NULL,
  `username` VARCHAR(50) NULL,
  `name` VARCHAR(50) NULL,
  `surname` VARCHAR(50) NULL,
  `email` VARCHAR(250) NULL,
  `password` VARCHAR(250) NULL,
  `category` TINYINT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC));

  ---------------Codigo en Create_Product.ejs---------------------

  				<!-- <div class="icono">
					<i class="fab fa-product-hunt"></i>
					<label for="name">
						<span> Product name</span>
						<input type="text" name="name" id="name">
					</label>
				</div>
				<div class="icono">
					<i class="fab fa-product-hunt"></i>
					<label for="description">
						<span>Description</span>
						<input type="text" name="description" id="description">
					</label>
				</div>
				<div class="icono">
					<i class="fab fa-product-hunt"></i>
					<label for="category">
						<span>Category</span>
						<select name="category" id="category">Category</select>
						<option value="1">Seller</option>
						<option value="2">Buyer</option>
						<option value="3">God</option>
					</label>
				</div>

				<div class="icono">
					<i class="fab fa-product-hunt"></i>
					<label for="precio">
						<span>price</span>
						<input type="number" name="precio" id="precio">
					</label>
				</div>

				<div class="fotoRegister">
					!--<label for="myfile">Select a file:</label>->
					<input type="file" id="fotoProducto" name="fotoProducto">
				</div> -->


-------------------------------Codigo en model Product.js-------------------

;

        Products.hasMany(models.Images, {
            as: "images",
            foreignKey: "product_id"
        })

-------------------------------Codigo Controller Product--------------------
list: 

                    db.Images.findAll()
                    .then(function(images){
                res.render('products/products', {products, brands, images});

----------------------------Codigo Product.ejs----------------------------

                        bodyImages = [];
                    for( let i = 0; i < images.length; i++ ) { 
                        if(images[i].product_id == bodyProducts.id){
                            bodyImages.push({name: images[i].name});};}

	<img class="product_image" src="/fileProducts/<%= bodyImages[0].name %>" alt="Imagen" width="100%" height="50%">

-------------------------------Codigo Controller Product--------------------
create: 

                    db.Images.findAll()
                    .then(function(images){
                    res.render('products/create_product', {categories, brands, images});

detail:
					db.Images.findAll()
                        .then(function(images){
                            res.render("products/detail_products", { products, brands, images });
                        })

----------------------------Codigo detail_products.ejs----------------------------

 				<% bodyImages = []; 
                for( let i = 0; i < images.length; i++ ) { 
                     if(images[i].product_id == products.id){ 
                         bodyImages.push({name: images[i].name});};}; %>
            <div class="imagen_detalle"><img class="product_image" src="/fileProducts/<%= bodyImages[0].name %>" alt="Imagen de Producto"></div>
            
            <% for( let i = 0; i < bodyImages.length; i++ ) { %>
            <div class="imagen_detalle"><img class="product_image" src="/fileProducts/<%= bodyImages[i].name %>" alt="Imagen de Producto"></div>
            <% } %>

----------------------------Codigo Controller Product----------------------------
edit:
			let imagesEdit = db.Images.findAll();

            Promise.all([productEdit, categoriesEdit, brandsEdit, imagesEdit])
                .then(function([products, categories, brands, images]){
                    res.render("products/edit_products", {products, categories, brands, images});
                })
				